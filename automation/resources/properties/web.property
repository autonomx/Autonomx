# Web
#key value. key should match the web app test.module name. eg. test.module name = google, therefore: google="http://google.com"
webApp="http://demo.autonomx.io/admin/"
framework="http://demo.autonomx.io/admin/"

# Options: CHROME, FIREFOX, INTERNET_EXPLORER, MICROSOFT_EDGE, Opera, CHROME_HEADLESS, FIREFOX_HEADLESS, SAFARI
web.browserType = CHROME

# to add additional web capabilities, add capability after the prefix: "web.capabilities."
web.capabilities.takesScreenshot = true

# to add additional chrome options, add options after the prefix: "chrome.options" separated by ";"
# eg. chrome.options = [--headless] [--start-fullscreen] [user-agent=test-user-agent]
# for more arguments: https://peter.sh/experiments/chromium-command-line-switches/
chrome.options =[headless][user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.84 Safari/537.36]
firefox.options = ""

# to add additional chrome preferences, add options after the prefix: "chrome.pref."
#chrome.pref.intl.accept_languages = fr
#firefox.pref.intl.accept_languages = fr

# highlights click and send key fields. duration is time in seconds to pause during highlight 
web.element.highlight.enable = false
web.element.highlight.waitDurationInSeconds = 0.1

# Options: LATEST or version number. eg. 56.4
# For chrome drivers, please check https://chromedriver.chromium.org/downloads
web.driver.manager.version = LATEST

# web driver manager proxy info
web.driver.manager.proxy.forceCache = false
web.driver.manager.timeoutSeconds = 5

# set path to webdriver. if set, this driver will be used instead of webDriverManager. 
# use in case webdriverManager is not able to download the correct driver
# path relative to root directory (where pom.xml file is)
# driver must match the browser type set at: web.browserType
web.driver.manual.path = ""

web.maximizeBrowser = false

# Options: REMOTE_WEBDRIVER, LOCAL_WEBDRIVER
web.webdriverType = LOCAL_WEBDRIVER

# valid when REMOTE_WEBDRIVER is selected
web.remote.server.url = localhost
web.remote.server.port = 4444