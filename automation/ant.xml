<project>

 <property name="dir.generated" value="target/generated-sources/annotations"/>
 <property name="dir.mvnstatus" value="target/maven-status"/>
 <property name="file.marker" value="target/generated-sources/annotations/marker/marker.java"/>
 <property name="file.markerDir" value="target/generated-sources/annotations/marker"/>


	<!-- when add, delete, rename file detected, marker.java is deleted. upon deletion, mvn-compile task will run 
	- if change detected at main or keywords
			- compile
			- delete generated folder
	- if change detected in csv files in main
		- run mvn generate source
	-->
	
	<target name="dirChangeDetector" description="detect changes in main and keyword directory, delete file.maker on detection">
	 	  <java classname="fileDetector.dirChangeDetector">
	 	    <classpath>
	 	      <pathelement location="library/dirChangeDetector.jar"/>
	 	    </classpath>
	 	  </java>
	 	</target>
	
	<target name="checkDirChanges" depends="dirChangeDetector" description="check for changes in src dir">
	      <uptodate property="noDirchanges" targetfile="${file.marker}">
	      	 <srcfiles dir="${file.markerDir}" includes="**/*.java"/>

	      </uptodate>
	   </target>
	
	<target name="mvn-compile" depends="checkDirChanges" unless="noDirchanges" description="compile to check for errors and delete generated folder if no errors">
		    <property environment="env" />
		    <path id="classpath">
		        <fileset dir="../runner/utils/mvn/boot">
		            <include name="plexus-classworlds-*.jar" />
		        </fileset>
		    </path>
		    <property name="mvn.mainclass" value="org.codehaus.plexus.classworlds.launcher.Launcher" />

		 	<!-- run generate source to verify no compilation error, then delete generate source folder and regenerate sources -->
		 	
		    <java classname="${mvn.mainclass}" classpathref="classpath" fork="true" failonerror="true">
		        <jvmarg value="-Dclassworlds.conf=../runner/utils/mvn/bin/m2.conf" />
		        <jvmarg value="-Dmaven.home=../runner/utils/mvn/" />
		         <jvmarg value="-Dmaven.multiModuleProjectDirectory=../runner/utils/mvn/" />
		        <arg value="compile" />
		    </java>
		 	
		 	 <!-- cleaning source generated folder -->
		 	
		 	 <delete dir="${dir.generated}"/>   <!-- delete generated folder -->
	 		 <delete dir="${dir.mvnstatus}"/> <!-- delete maven status folder to indicate the files have changed -->

		</target>
	
 <target name="checkforCsvAndConfigchanges" depends="mvn-compile" description="check for changes in csv, property and conf files">
      <uptodate property="nochanges" targetfile="${file.marker}">
      	 <srcfiles dir="src" includes="**/data/*.csv"/>
      	 <srcfiles dir="resources" includes="**/*.property"/>
      	 <srcfiles dir="resources" includes="**/*.conf"/>
      </uptodate>
   </target>
	

<!-- will run when checkforCsvchanges or dirChangeDetector detect changes in main,keyword dir or changes in csv files in main dir -->
 <target name="mvn-clean-generate" depends="checkforCsvAndConfigchanges" unless="nochanges">
    <property environment="env" />
    <path id="classpath">
        <fileset dir="../runner/utils/mvn/boot">
            <include name="plexus-classworlds-*.jar" />
        </fileset>
    </path>
    <property name="mvn.mainclass" value="org.codehaus.plexus.classworlds.launcher.Launcher" />

 	<delete dir="${dir.mvnstatus}"/> <!-- delete maven status folder to indicate the files have changed -->

    <java classname="${mvn.mainclass}" classpathref="classpath" fork="true" failonerror="false">
        <jvmarg value="-Dclassworlds.conf=../runner/utils/mvn/bin/m2.conf" />
        <jvmarg value="-Dmaven.home=../runner/utils/mvn/" />
         <jvmarg value="-Dmaven.multiModuleProjectDirectory=../runner/utils/mvn/" />
        <arg value="generate-sources" />
    </java>
</target>
	
</project>