<project>

<target name="mvn-clean">
    <property environment="env" />
    <path id="classpath">
        <fileset dir="../runner/utils/mvn/boot">
            <include name="plexus-classworlds-*.jar" />
        </fileset>
    </path>
    <property name="mvn.mainclass" value="org.codehaus.plexus.classworlds.launcher.Launcher" />

    <java classname="${mvn.mainclass}" classpathref="classpath" fork="true" failonerror="true">
        <jvmarg value="-Dclassworlds.conf=../runner/utils/mvn/bin/m2.conf" />
        <jvmarg value="-Dmaven.home=../runner/utils/mvn/" />
         <jvmarg value="-Dmaven.multiModuleProjectDirectory=../runner/utils/mvn/" />
        <arg value="clean" />
    </java>
</target>

<target name="mvn-copyDependencies">
    <property environment="env" />
    <path id="classpath">
        <fileset dir="../runner/utils/mvn/boot">
            <include name="plexus-classworlds-*.jar" />
        </fileset>
    </path>
    <property name="mvn.mainclass" value="org.codehaus.plexus.classworlds.launcher.Launcher" />

    <java classname="${mvn.mainclass}" classpathref="classpath" fork="true" failonerror="true">
        <jvmarg value="-Dclassworlds.conf=../runner/utils/mvn/bin/m2.conf" />
        <jvmarg value="-Dmaven.home=../runner/utils/mvn/" />
         <jvmarg value="-Dmaven.multiModuleProjectDirectory=../runner/utils/mvn/" />
        <arg value="dependency:copy-dependencies" />
    </java>
</target>


 <target name="copy-annotation-automationCore">
    <copy tofile=".library-annotation/automationCore.jar" overwrite="true">
      <fileset dir="target/dependency">
        <filename name="**/*automationCore*"/>
      </fileset>
    </copy>
 </target>


 <target name="copy-generated-annotations">
    <copy todir=".apt_generated" overwrite="true">
      <fileset dir="target/generated-sources/annotations">
      </fileset>
    </copy>
 </target>


 <target name="generate-ant-annotation">
    <javac srcdir="src"
        destdir="ant-annotations"
        failonerror="false"
        fork="true"
        classpath="target/classes">
        <compilerarg value="-proc:only"/>
    </javac>
 </target>


  <target name="copy-annotation-freebuilder">
    <copy tofile=".library-annotation/freebuilder.jar" overwrite="true">
      <fileset dir="target/dependency">
        <filename name="**/*freebuilder*"/>
      </fileset>
    </copy>
 </target>

 <target name="mvn-compile-main">
    <property environment="env" />
    <path id="classpath">
        <fileset dir="../runner/utils/mvn/boot">
            <include name="plexus-classworlds-*.jar" />
        </fileset>
    </path>
    <property name="mvn.mainclass" value="org.codehaus.plexus.classworlds.launcher.Launcher" />

    <java classname="${mvn.mainclass}" classpathref="classpath" fork="true" failonerror="true">
        <jvmarg value="-Dclassworlds.conf=../runner/utils/mvn/bin/m2.conf" />
        <jvmarg value="-Dmaven.home=../runner/utils/mvn/" />
         <jvmarg value="-Dmaven.multiModuleProjectDirectory=../runner/utils/mvn/" />
        <arg value="compiler:compile" />
    </java>
</target>

 <target name="mvn-compile-test">
    <property environment="env" />
    <path id="classpath">
        <fileset dir="../runner/utils/mvn/boot">
            <include name="plexus-classworlds-*.jar" />
        </fileset>
    </path>
    <property name="mvn.mainclass" value="org.codehaus.plexus.classworlds.launcher.Launcher" />

    <java classname="${mvn.mainclass}" classpathref="classpath" fork="true" failonerror="true">
        <jvmarg value="-Dclassworlds.conf=../runner/utils/mvn/bin/m2.conf" />
        <jvmarg value="-Dmaven.home=../runner/utils/mvn/" />
         <jvmarg value="-Dmaven.multiModuleProjectDirectory=../runner/utils/mvn/" />
        <arg value="compiler:testCompile" />
    </java>
</target>

</project>