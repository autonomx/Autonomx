<project>

 <property name="dir.generated" value="target/generated-sources/annotations"/>
 <property name="dir.mvnstatus" value="target/maven-status"/>
 <property name="file.marker" value="target/generated-sources/annotations/marker/marker.java"/>

 <target name="checkforchanges">
      <uptodate property="nochanges" targetfile="${file.marker}">
         <srcfiles dir="src" includes="**/*.java"/>
      	 <srcfiles dir="src" includes="**/*.csv"/>
      </uptodate>
   </target>

 <target name="mvn-clean-generate" depends="checkforchanges" unless="nochanges">
    <property environment="env" />
    <path id="classpath">
        <fileset dir="../runner/utils/mvn/boot">
            <include name="plexus-classworlds-*.jar" />
        </fileset>
    </path>
    <property name="mvn.mainclass" value="org.codehaus.plexus.classworlds.launcher.Launcher" />

 	<!-- run generate source to verify no compilation error, then delete generate source folder and regenerate sources -->
 	
    <java classname="${mvn.mainclass}" classpathref="classpath" fork="true" failonerror="true">
        <jvmarg value="-Dclassworlds.conf=../runner/utils/mvn/bin/m2.conf" />
        <jvmarg value="-Dmaven.home=../runner/utils/mvn/" />
         <jvmarg value="-Dmaven.multiModuleProjectDirectory=../runner/utils/mvn/" />
        <arg value="generate-sources" />
    </java>
 	
 	 <!-- cleaning source generated folder -->
 	<delete dir="${dir.generated}"/>  <!-- delete generated folder -->
 	<delete dir="${dir.mvnstatus}"/> <!-- delete maven status folder to indicate the files have changed -->

    <java classname="${mvn.mainclass}" classpathref="classpath" fork="true" failonerror="false">
        <jvmarg value="-Dclassworlds.conf=../runner/utils/mvn/bin/m2.conf" />
        <jvmarg value="-Dmaven.home=../runner/utils/mvn/" />
         <jvmarg value="-Dmaven.multiModuleProjectDirectory=../runner/utils/mvn/" />
        <arg value="generate-sources" />
    </java>
</target>

<!-- Comments go here 
<target name="mvn-clean">
    <property environment="env" />
    <path id="classpath">
        <fileset dir="../runner/utils/mvn/boot">
            <include name="plexus-classworlds-*.jar" />
        </fileset>
    </path>
    <property name="mvn.mainclass" value="org.codehaus.plexus.classworlds.launcher.Launcher" />

    <java classname="${mvn.mainclass}" classpathref="classpath" fork="true" failonerror="true">
        <jvmarg value="-Dclassworlds.conf=../runner/utils/mvn/bin/m2.conf" />
        <jvmarg value="-Dmaven.home=../runner/utils/mvn/" />
         <jvmarg value="-Dmaven.multiModuleProjectDirectory=../runner/utils/mvn/" />
        <arg value="clean" />
    </java>
</target>

<target name="mvn-generate-sources-only"
    description="generate source files">
    <property environment="env" />
    <path id="classpath">
        <fileset dir="../runner/utils/mvn/boot">
            <include name="plexus-classworlds-*.jar" />
        </fileset>
    </path>
    <property name="mvn.mainclass" value="org.codehaus.plexus.classworlds.launcher.Launcher" />

    <java classname="${mvn.mainclass}" classpathref="classpath" fork="true" failonerror="true">
        <jvmarg value="-Dclassworlds.conf=../runner/utils/mvn/bin/m2.conf" />
        <jvmarg value="-Dmaven.home=../runner/utils/mvn/" />
         <jvmarg value="-Dmaven.multiModuleProjectDirectory=../runner/utils/mvn/" />
        <arg value="generate-sources" />
    </java>
</target>

 <target name="clean-generated-dir"
          description="Remove all generated files.">
    <delete dir="${dir.generated}"/>
    <delete dir="${dir.mvnstatus}"/>
  </target>

<target name="mvn-copyDependencies">
    <property environment="env" />
    <path id="classpath">
        <fileset dir="../runner/utils/mvn/boot">
            <include name="plexus-classworlds-*.jar" />
        </fileset>
    </path>
    <property name="mvn.mainclass" value="org.codehaus.plexus.classworlds.launcher.Launcher" />

    <java classname="${mvn.mainclass}" classpathref="classpath" fork="true" failonerror="true">
        <jvmarg value="-Dclassworlds.conf=../runner/utils/mvn/bin/m2.conf" />
        <jvmarg value="-Dmaven.home=../runner/utils/mvn/" />
         <jvmarg value="-Dmaven.multiModuleProjectDirectory=../runner/utils/mvn/" />
        <arg value="dependency:copy-dependencies" />
    </java>
</target>


 <target name="copy-annotation-automationCore">
    <copy tofile=".library-annotation/automationCore.jar" overwrite="true">
      <fileset dir="target/dependency">
        <filename name="**/*automationCore*"/>
      </fileset>
    </copy>
 </target>


 <target name="copy-generated-annotations"
    description="copy generated files to .apt_generated">
    <copy todir=".apt_generated" overwrite="true">
      <fileset dir="${dir.generated}">
      </fileset>
    </copy>
 </target>
-->
</project>