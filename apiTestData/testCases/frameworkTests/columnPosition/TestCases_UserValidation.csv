TestSuite,InterfaceType,TestCaseID,RunFlag,Description,ContentType,Method,Option,TemplateFile,RequestHeaders,RequestBody,UriPath,OutputParams,RespCodeExp,ExpectedResponse,TcComments
TsColumnPos,EXTERNAL,removeBeforeCsvFile,N,do not run before csv for this test,,"beforeCsvFile:none;afterCsvFile:none;",,,,,,,,,
TsColumnPos,RESTfulAPI,getAdminToken,Y,Retrieve a token from Token Generator,application/json,POST,,,,"{""identifier"": ""<@adminUserName>"",""password"": ""<@adminUserPassword>""}",/auth/local,"user.role.id:<$roles>; jwt:<$accessTokenAdmin>;user.id:<$userId>",200,"{       ""user"": {        ""username"":  ""<@adminUserName>"",        ""email"": ""autouser313@gmail.com"",        ""provider"": ""local"",        ""confirmed"": true,        ""blocked"": null    }}&&_VERIFY.JSON.PART_user:jsonbody([{        ""username"":  ""<@adminUserName>"",        ""email"": ""autouser313@gmail.com"",        ""provider"": ""local"",        ""confirmed"": true,        ""blocked"": null    }]);user[?(@.username == ""autoAdmin1"")].provider:equalTo(local);user.username:1: hasItems(<@adminUserName>);user.email:1: equalTo(autouser313@gmail.com);user.provider:1: isNotEmpty;user.role.name:1: contains(Administrator)&& _NOT_EMPTY_",
TsColumnPos,RESTfulAPI,createUser,Y,create user,application/x-www-form-urlencoded,POST,DEPENDS_ON_TEST:getAdminToken,,Authorization: Bearer <@accessTokenAdmin>,"username:zzz_test<@_RAND16><@_INCREMENT_FROM_1>,email:testuser+<@_TIME_MS_24><@_INCREMENT_FROM_1>@gmail.com,password:password<@_TIME_MS_24>,confirmed:true",/content-manager/explorer/user/?source=users-permissions,id:<$userId>,201,"{    ""provider"": ""local"",    ""blocked"": null}&&_VERIFY.JSON.PART_id: isNotEmpty",
TsColumnPos,RESTfulAPI,createUserNoToken,Y,create user  no token,application/x-www-form-urlencoded,POST,,,NO_TOKEN,"username:zzz_test<@_TIME_MS_24>,email:testuser+<@_TIME_MS_24>@gmail.com,password:password<@_TIME_MS_24>,confirmed:true",/content-manager/explorer/user/?source=users-permissions,,403,"{""statusCode"":403,""error"":""Forbidden"",""message"":""Forbidden""}",
TsColumnPos,RESTfulAPI,createUserInvalidToken,Y,create user invalid token,application/x-www-form-urlencoded,POST,,,INVALID_TOKEN,"username:zzz_test<@_RAND16>,email:testuser+<@_TIME_MS_24>@gmail.com,password:password<@_TIME_MS_24>,confirmed:true",/content-manager/explorer/user/?source=users-permissions,,401,"{""statusCode"":401,""error"":""Unauthorized""}",
TsColumnPos,RESTfulAPI,updateUser,Y,update user,application/json,PUT,,,Authorization: Bearer <@accessTokenAdmin>,"{""username"":""zzz_update<@_RAND16>"",""email"":""testUpdate+<@_TIME_MS_24>@gmail.com"",""password"":""password<@_TIME_MS_24>"",""confirmed"":true}",/content-manager/explorer/user/<@userId>?source=users-permissions,,200,"{""id"":<@userId>,""username"":""zzz_update<@_RAND16>"",""email"":""testUpdate+<@_TIME_MS_24>@gmail.com"",""provider"":""local"",""confirmed"":true,""blocked"":null,""role"":      {       ""name"":""Authenticated"",        ""description"":""Default role given to authenticated user."",        ""type"":""authenticated""      }}&&_VERIFY.JSON.PART_role:jsonbody([{       ""name"":""Authenticated"",        ""description"":""Default role given to authenticated user."",        ""type"":""authenticated""      }])",
TsColumnPos,RESTfulAPI,deleteUser,Y,delete user,,DELETE,,,Authorization: Bearer <@accessTokenAdmin>,,/content-manager/explorer/user/<@userId>?source=users-permissions,,200,,